<?php


namespace app\models;


use yii\base\Model;

class EntryForm extends Model // расширяет класс yii\base\Model. При работе с БД Не рекомендуется к использованию
{  //Для работы с таблицами БД рекомендуется использовать класс Active Record.
    /*Для того что бы описать поля формы - необходимо для каждого из полей
    создать публичные свойства*/
    public $name;
    public $email;
    public $text;
    public $topic;

//    Далее надо создавать обьект этой формы в экшене (TestController -> actionIndex)

    public function rules()
    {
        /*Метод rules задает провила валидации для формы. И возвращает массив этихъ правил.

        В массиве описывам все поля которые валидируются в виде: ['поле', 'валидатор', 'massage' => 'Сообщение']
        'поле' -> задаем 1 поле или массив полей к которым хотим применить один и тот же валидатор
        'валидатор' -> задаем нужный нам валидатор
        'massage' -> пишем нужное нам сообщение при непрохождении валидации (! имеется не у всех валидаторов)
        Некоторые валидаторы имеют свои уникальные свойства

        По умолчанию Yii2 считает все приходящие данные не безопасными. По жтому если
        их не валидировать - они не будут обрабатываться. Возвращаем массив правил валидации.*/
        return [
            [['name', 'email', 'text'], 'required'], // для всех полей указываем валидатор required
            ['email', 'email'],  // для поля email указываем валидатор email
//            Примеры валидаторов:
//            ['topic', 'string', 'length' => [3, 6]],
//            ['topic', 'string', 'min' => 3, 'tooShort' => '3 min'],  // tooShort аналог massage
//            ['topic', 'string', 'max' => 6, 'tooLong' => '6 max'],  // tooLong аналог massage
//            ['topic', 'required', 'message' => 'Надо бы заполнить поле topic'],
//            ['topic', 'safe'],  // safe - Этот валидатор не проверяет данные. Вместо этого он указывает,
            // что атрибут является безопасным.

//            Создание собственного валидатора:
            ['topic', 'validateCountry', 'skipOnEmpty' => false],  /* Yii увидит что данный валидатор
             не стандартный и начнет искать в моделе метод который описывает данный валидатор. Данная валидация
            является серверной, что бы она отрабоатывала на клиенте - необходимо включить Ajax валидацию.
            'skipOnEmpty' => false - проверяет что бы не приходили пустые данные.*/
        ];
    }

    public function validateCountry($attribute, $params)
    {
        if (!in_array($this->$attribute, ['USA', 'Indonesia'])) {
            /* Условие обратится к атрибуту (topic) и проверит соответствует ли введенное значение одному из
            заданных в массиве ['USA', 'Indonesia'] значений. Если нет - выведет сообщение об ошибке */
            $this->addError($attribute, 'Страна должна быть либо "USA" или "Indonesia".');
        }
    }

    public function attributeLabels()
    {
        /*Данный метод можно использовать для изменения названия лейблов полей формы*/
        return [
            'name' => 'Имечко:',
            'email' => 'E-mail:',
            'text' => 'Чё-то написать:',
            'topic' => 'Какая-то тема:',
        ];
    }

}

